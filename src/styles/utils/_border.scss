/* space border */
@mixin border($size-type, $size) {
	@if not map-has-key($sizes-types, $size-type) {
		@error "No key '#{$size-type}' on sizes types";
	}

	@if not map-has-key($sizes, $size) {
		@error "No key '#{$size}' on sizes";
	}

	border-width: var(--sbsys-size-#{$size-type}-#{$size});
}

@mixin border-x($size-type, $size) {
	@if not map-has-key($sizes-types, $size-type) {
		@error "No key '#{$size-type}' on sizes types";
	}

	@if not map-has-key($sizes, $size) {
		@error "No key '#{$size}' on sizes";
	}

	border-left-width: var(--sbsys-size-#{$size-type}-#{$size});
	border-right-width: var(--sbsys-size-#{$size-type}-#{$size});
}

@mixin border-left($size-type, $size) {
	@if not map-has-key($sizes-types, $size-type) {
		@error "No key '#{$size-type}' on sizes types";
	}

	@if not map-has-key($sizes, $size) {
		@error "No key '#{$size}' on sizes";
	}

	border-left-width: var(--sbsys-size-#{$size-type}-#{$size});
}

@mixin border-right($size-type, $size) {
	@if not map-has-key($sizes-types, $size-type) {
		@error "No key '#{$size-type}' on sizes types";
	}

	@if not map-has-key($sizes, $size) {
		@error "No key '#{$size}' on sizes";
	}

	border-right-width: var(--sbsys-size-#{$size-type}-#{$size});
}

@mixin border-y($size-type, $size) {
	@if not map-has-key($sizes-types, $size-type) {
		@error "No key '#{$size-type}' on sizes types";
	}

	@if not map-has-key($sizes, $size) {
		@error "No key '#{$size}' on sizes";
	}

	border-top-width: var(--sbsys-size-#{$size-type}-#{$size});
	border-bottom-width: var(--sbsys-size-#{$size-type}-#{$size});
}

@mixin border-top($size-type, $size) {
	@if not map-has-key($sizes-types, $size-type) {
		@error "No key '#{$size-type}' on sizes types";
	}

	@if not map-has-key($sizes, $size) {
		@error "No key '#{$size}' on sizes";
	}

	border-top-width: var(--sbsys-size-#{$size-type}-#{$size});
}

@mixin border-bottom($size-type, $size) {
	@if not map-has-key($sizes-types, $size-type) {
		@error "No key '#{$size-type}' on sizes types";
	}

	@if not map-has-key($sizes, $size) {
		@error "No key '#{$size}' on sizes";
	}

	border-bottom-width: var(--sbsys-size-#{$size-type}-#{$size});
}

@mixin implement-border-size {
	&-border {
		$parent: &;

		border-width: 0;

		@each $size-type in map-values($sizes-types) {
			&--#{$size-type}#{$parent} {
				@each $current-size in map-values($sizes) {
					&--#{$current-size} {
						@include border($size-type, $current-size);
					}
				}
			}
		}

		@each $size-type in map-values($sizes-types) {
			&-x--#{$size-type}#{$parent} {
				@each $current-size in map-values($sizes) {
					&-x--#{$current-size} {
						@include border-x($size-type, $current-size);
					}
				}
			}
		}

		@each $size-type in map-values($sizes-types) {
			&-left--#{$size-type}#{$parent} {
				@each $current-size in map-values($sizes) {
					&-left--#{$current-size} {
						@include border-left($size-type, $current-size);
					}
				}
			}
		}

		@each $size-type in map-values($sizes-types) {
			&-right--#{$size-type}#{$parent} {
				@each $current-size in map-values($sizes) {
					&-right--#{$current-size} {
						@include border-right($size-type, $current-size);
					}
				}
			}
		}

		@each $size-type in map-values($sizes-types) {
			&-y--#{$size-type}#{$parent} {
				@each $current-size in map-values($sizes) {
					&-y--#{$current-size} {
						@include border-y($size-type, $current-size);
					}
				}
			}
		}

		@each $size-type in map-values($sizes-types) {
			&-top--#{$size-type}#{$parent} {
				@each $current-size in map-values($sizes) {
					&-top--#{$current-size} {
						@include border-top($size-type, $current-size);
					}
				}
			}
		}

		@each $size-type in map-values($sizes-types) {
			&-bottom--#{$size-type}#{$parent} {
				@each $current-size in map-values($sizes) {
					&-bottom--#{$current-size} {
						@include border-bottom($size-type, $current-size);
					}
				}
			}
		}
	}
}
