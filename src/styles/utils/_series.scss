/* opacities */
$opacities: (
	weakest: 0,
	weak: 0.25,
	main: 0.5,
	strong: 0.75,
	strongest: 1,
);
$apply-opacity: (
	bg: bg,
	text: text,
	border-left: border-left,
	border-right: border-right,
	border-top: border-top,
	border-bottom: border-bottom,
	shadow: shadow,
);

/* series theme */
$series-values: (
	light: (
		bg: (
			weakest: #fefefe,
			weak: #EAEAEA,
			main: #F4F4F4,
			strong: #FEFEFE,
			strongest: #fefefe,
		),
		text: (
			weakest: #fefefe,
			weak: #727272,
			main: #3D3D3D,
			strong: #080808,
			strongest: #fefefe,
		),
		base: (
			weakest: #fefefe,
			weak: #4C5C6B,
			main: #586B7D,
			strong: #6B8196,
			strongest: #fefefe,
		),
		primary: (
			weakest: #fefefe,
			weak: #2E678A,
			main: #3577A0,
			strong: #418FC0,
			strongest: #321234,
		),
		secondary: (
			weakest: #fefefe,
			weak: #256F5A,
			main: #2B8068,
			strong: #37A687,
			strongest: #fefefe,
		),
		accent: (
			weakest: #fefefe,
			weak: #463778,
			main: #51408A,
			strong: #634EAA,
			strongest: #fefefe,
		),
		info: (
			weakest: #fefefe,
			weak: #417F8D,
			main: #4C94A5,
			strong: #60A6B6,
			strongest: #fefefe,
		),
		success: (
			weakest: #fefefe,
			weak: #489C57,
			main: #56B167,
			strong: #6FBD7E,
			strongest: #fefefe,
		),
		warning: (
			weakest: #fefefe,
			weak: #BA8D1C,
			main: #DAA520,
			strong: #E2B33D,
			strongest: #fefefe,
		),
		danger: (
			weakest: #fefefe,
			weak: #BA1830,
			main: #D91C38,
			strong: #E53650,
			strongest: #fefefe,
		),
	),
	dark: (
		bg: (
			weakest: #fefefe,
			weak: #242424,
			main: #141414,
			strong: #0A0A0A,
			strongest: #fefefe,
		),
		text: (
			weakest: #fefefe,
			weak: #A4A4A4,
			main: #D2D2D2,
			strong: #FEFEFE,
			strongest: #fefefe,
		),
		base: (
			weakest: #fefefe,
			weak: #536576,
			main: #62768A,
			strong: #75899D,
			strongest: #fefefe,
		),
		primary: (
			weakest: #fefefe,
			weak: #316E94,
			main: #3A81AD,
			strong: #4B95C3,
			strongest: #fefefe,
		),
		secondary: (
			weakest: #fefefe,
			weak: #277660,
			main: #2E8A70,
			strong: #3AAD8C,
			strongest: #fefefe,
		),
		accent: (
			weakest: #fefefe,
			weak: #544290,
			main: #624DA8,
			strong: #7763B7,
			strongest: #fefefe,
		),
		info: (
			weakest: #fefefe,
			weak: #468899,
			main: #549DB0,
			strong: #6CACBC,
			strongest: #fefefe,
		),
		success: (
			weakest: #fefefe,
			weak: #469955,
			main: #54B065,
			strong: #6CBC7B,
			strongest: #fefefe,
		),
		warning: (
			weakest: #fefefe,
			weak: #CA991E,
			main: #E0AD2D,
			strong: #E4B94C,
			strongest: #fefefe,
		),
		danger: (
			weakest: #fefefe,
			weak: #C91A34,
			main: #E32542,
			strong: #E7455E,
			strongest: #fefefe,
		),
	),
);

/* generate css variables */
@mixin generate-series {
	html {
		@each $current-theme, $current-series in $series-values {
			@each $current-serie, $current-intensities in $current-series {
				@each $current-intensity-key,
					$current-intensity-value in $current-intensities
				{
					--sbsys-serie-#{$current-theme}-#{$current-serie}-#{$current-intensity-key}: #{red(
								$current-intensity-value
							)},
						#{green($current-intensity-value)},
						#{blue($current-intensity-value)};
				}
			}
		}

		@each $current-apply-key, $current-apply-value in $apply-opacity {
			--sbsys-serie-#{$current-apply-key}-opacity: 1;
		}
	}
}

@mixin series($theme-type, $serie-type) {
	@if not map-has-key($themes, $theme-type) {
		@error "No key '#{$theme-type}' on themes";
	}

	@if not map-has-key($series, $serie-type) {
		@error "No key '#{$serie-type}' on series";
	}

	&-fill {
		@each $intensity-key,
			$intensity-value
				in map-get($series-values, $theme-type, $serie-type)
		{
			&--#{$theme-type}-#{$serie-type}-#{$intensity-key} {
				background-color: rgba(
					var(
						--sbsys-serie-#{$theme-type}-#{$serie-type}-#{$intensity-key}
					),
					var(--sbsys-serie-bg-opacity)
				);
			}
		}
	}

	&-text {
		@each $intensity-key,
			$intensity-value
				in map-get($series-values, $theme-type, $serie-type)
		{
			&--#{$theme-type}-#{$serie-type}-#{$intensity-key} {
				color: rgba(
					var(
						--sbsys-serie-#{$theme-type}-#{$serie-type}-#{$intensity-key}
					),
					var(--sbsys-serie-text-opacity)
				);
			}
		}
	}

	&-outl {
		@each $intensity-key,
			$intensity-value
				in map-get($series-values, $theme-type, $serie-type)
		{
			&--#{$theme-type}-#{$serie-type}-#{$intensity-key} {
				border-left-color: rgba(
					var(
						--sbsys-serie-#{$theme-type}-#{$serie-type}-#{$intensity-key}
					),
					var(--sbsys-serie-border-left-opacity)
				);
				border-right-color: rgba(
					var(
						--sbsys-serie-#{$theme-type}-#{$serie-type}-#{$intensity-key}
					),
					var(--sbsys-serie-border-right-opacity)
				);
				border-top-color: rgba(
					var(
						--sbsys-serie-#{$theme-type}-#{$serie-type}-#{$intensity-key}
					),
					var(--sbsys-serie-border-top-opacity)
				);
				border-bottom-color: rgba(
					var(
						--sbsys-serie-#{$theme-type}-#{$serie-type}-#{$intensity-key}
					),
					var(--sbsys-serie-border-bottom-opacity)
				);
			}
		}

		@each $intensity-key,
			$intensity-value
				in map-get($series-values, $theme-type, $serie-type)
		{
			&-x--#{$theme-type}-#{$serie-type}-#{$intensity-key} {
				border-left-color: rgba(
					var(
						--sbsys-serie-#{$theme-type}-#{$serie-type}-#{$intensity-key}
					),
					var(--sbsys-serie-border-left-opacity)
				);
				border-right-color: rgba(
					var(
						--sbsys-serie-#{$theme-type}-#{$serie-type}-#{$intensity-key}
					),
					var(--sbsys-serie-border-right-opacity)
				);
			}
		}

		@each $intensity-key,
			$intensity-value
				in map-get($series-values, $theme-type, $serie-type)
		{
			&-left--#{$theme-type}-#{$serie-type}-#{$intensity-key} {
				border-left-color: rgba(
					var(
						--sbsys-serie-#{$theme-type}-#{$serie-type}-#{$intensity-key}
					),
					var(--sbsys-serie-border-left-opacity)
				);
			}
		}

		@each $intensity-key,
			$intensity-value
				in map-get($series-values, $theme-type, $serie-type)
		{
			&-right--#{$theme-type}-#{$serie-type}-#{$intensity-key} {
				border-right-color: rgba(
					var(
						--sbsys-serie-#{$theme-type}-#{$serie-type}-#{$intensity-key}
					),
					var(--sbsys-serie-border-right-opacity)
				);
			}
		}

		@each $intensity-key,
			$intensity-value
				in map-get($series-values, $theme-type, $serie-type)
		{
			&-y--#{$theme-type}-#{$serie-type}-#{$intensity-key} {
				border-top-color: rgba(
					var(
						--sbsys-serie-#{$theme-type}-#{$serie-type}-#{$intensity-key}
					),
					var(--sbsys-serie-border-top-opacity)
				);
				border-bottom-color: rgba(
					var(
						--sbsys-serie-#{$theme-type}-#{$serie-type}-#{$intensity-key}
					),
					var(--sbsys-serie-border-bottom-opacity)
				);
			}
		}

		@each $intensity-key,
			$intensity-value
				in map-get($series-values, $theme-type, $serie-type)
		{
			&-top--#{$theme-type}-#{$serie-type}-#{$intensity-key} {
				border-top-color: rgba(
					var(
						--sbsys-serie-#{$theme-type}-#{$serie-type}-#{$intensity-key}
					),
					var(--sbsys-serie-border-top-opacity)
				);
			}
		}

		@each $intensity-key,
			$intensity-value
				in map-get($series-values, $theme-type, $serie-type)
		{
			&-bottom--#{$theme-type}-#{$serie-type}-#{$intensity-key} {
				border-bottom-color: rgba(
					var(
						--sbsys-serie-#{$theme-type}-#{$serie-type}-#{$intensity-key}
					),
					var(--sbsys-serie-border-bottom-opacity)
				);
			}
		}
	}
}
