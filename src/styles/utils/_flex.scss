/* display flex */
@mixin flex {
	display: flex;
}

@mixin flex-orientation($orientation) {
	@if not map-has-key($orientations, $orientation) {
		@error "No key '#{$orientation}' on orientations";
	}

	@if $orientation == horizontal {
		flex-direction: row;
	}

	@if $orientation == vertical {
		flex-direction: column;
	}
}

@mixin flex-alignment($alignment) {
	@if not map-has-key($alignments, $alignment) {
		@error "No key '#{$alignment}' on alignments";
	}

	@if $alignment == start {
		align-items: flex-start;
	}

	@if $alignment == center {
		align-items: center;
	}

	@if $alignment == end {
		align-items: flex-end;
	}
}

@mixin flex-justify($alignment) {
	@if not map-has-key($alignments, $alignment) {
		@error "No key '#{$alignment}' on alignments";
	}

	@if $alignment == start {
		justify-content: flex-start;
	}

	@if $alignment == center {
		justify-content: center;
	}

	@if $alignment == end {
		justify-content: flex-end;
	}
}

@mixin flex-self-alignment($alignment) {
	@if not map-has-key($alignments, $alignment) {
		@error "No key '#{$alignment}' on alignments";
	}

	@if $alignment == start {
		align-self: flex-start;
	}

	@if $alignment == center {
		align-self: center;
	}

	@if $alignment == end {
		align-self: flex-end;
	}
}

@mixin implement-flex {
	&-flex {
		@include flex;

		@each $current-orientation in map-values($orientations) {
			&-orientation--#{$current-orientation} {
				@include flex-orientation($current-orientation);
			}
		}

		@each $current-alignment in map-values($alignments) {
			&-alignment--#{$current-alignment} {
				@include flex-alignment($current-alignment);
			}
		}

		@each $current-alignment in map-values($alignments) {
			&-justify--#{$current-alignment} {
				@include flex-justify($current-alignment);
			}
		}
	}
}

@mixin implement-flex-self {
	@each $current-alignment in map-values($alignments) {
		&-self--#{$current-alignment} {
			@include flex-self-alignment($current-alignment);
		}
	}
}
