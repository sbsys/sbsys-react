/* Normalize definition */
@mixin normalize {
	&,
	&::before,
	&::after {
		-webkit-tap-highlight-color: transparent;
		@apply m-0 p-0 leading-tight;
		font-size: inherit;
		font-weight: inherit;
	}

	/* focus */
	*:focus {
		@apply outline-none;
	}

	/* icons */
	i {
		@apply flex flex-col justify-center items-center;
	}
}
/* 
$primary: #f3fe45;

:root {
    --color: #{red($primary)}, #{green($primary)}, #{blue($primary)};
    --opacity: 1;
}

@mixin flex {
    display: flex;

    &-horizontal {
        flex-direction: row;
    }

    &-vertical {
		flex-direction: column;
		background-color: rgba(var(--color), var(--opacity));
    }
}

$themes: (light, dark);
$screens: (sm: 320, md: 768, lg: 1024);

@mixin flex-generate {
    %flex {
        @include flex;
    }

    @each $theme in $themes {
        %#{$theme}-flex {
            .theme--#{$theme} & {
                @include flex;
            }
        }
    }

    @each $key, $value in $screens {
        @media screen and (min-width: #{$value}px) {
            %#{$key}-flex {
                @include flex;
            }

            @each $theme in $themes {
                %#{$theme}-#{$key}-flex {
                    .theme--#{$theme} & {
                        @include flex;
                    }
                }
            }
        }
    }
}

@include flex-generate;

@mixin dark {
    .theme--dark & {
        @content;
    }
}

.auth {
    @extend %flex, %flex-vertical;

    @extend %sm-flex-horizontal;
    @extend %light-sm-flex-vertical;

    @extend %md-flex-vertical;
    @extend %dark-md-flex-horizontal;

    &__children {
        @extend %flex, %flex-vertical;

        @extend %dark-flex-horizontal;

        &--variant {
            --opacity: 0.5;
            @extend %flex, %flex-horizontal;

            @extend %lg-flex-vertical;

            @extend %light-flex-horizontal;
        }
    }
}
 */