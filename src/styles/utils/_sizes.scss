/* generate css variables */
@mixin generate-sizes {
	html {
		@each $category, $category-sizes in $sizes-values {
			@each $category-size-key, $category-size-value in $category-sizes {
				--sbsys-size-#{$category}-#{$category-size-key}: #{$category-size-value}rem;
			}
		}

		@each $ln-key, $ln-value in $line {
			--sbsys-size-line-#{$ln-key}: #{$ln-value};
		}
	}
}

@mixin sizes($size-type) {
	@if not map-has-key($sizes-values, $size-type) {
		@error "No key '#{$size-type}' on sizes";
	}

	&-margin {
		@each $size-key, $size-value in $sizes {
			&--#{$size-type}-#{$size-key} {
				margin: var(--sbsys-size-#{$size-type}-#{$size-key});
			}
		}

		@each $size-key, $size-value in $sizes {
			&-x--#{$size-type}-#{$size-key} {
				margin-left: var(--sbsys-size-#{$size-type}-#{$size-key});
				margin-right: var(--sbsys-size-#{$size-type}-#{$size-key});
			}
		}

		@each $size-key, $size-value in $sizes {
			&-left--#{$size-type}-#{$size-key} {
				margin-left: var(--sbsys-size-#{$size-type}-#{$size-key});
			}
		}

		@each $size-key, $size-value in $sizes {
			&-right--#{$size-type}-#{$size-key} {
				margin-right: var(--sbsys-size-#{$size-type}-#{$size-key});
			}
		}

		@each $size-key, $size-value in $sizes {
			&-y--#{$size-type}-#{$size-key} {
				margin-top: var(--sbsys-size-#{$size-type}-#{$size-key});
				margin-bottom: var(--sbsys-size-#{$size-type}-#{$size-key});
			}
		}

		@each $size-key, $size-value in $sizes {
			&-top--#{$size-type}-#{$size-key} {
				margin-top: var(--sbsys-size-#{$size-type}-#{$size-key});
			}
		}

		@each $size-key, $size-value in $sizes {
			&-bottom--#{$size-type}-#{$size-key} {
				margin-bottom: var(--sbsys-size-#{$size-type}-#{$size-key});
			}
		}
	}

	&-border {
		border-style: solid;

		@each $size-key, $size-value in $sizes {
			&--#{$size-type}-#{$size-key} {
				border-width: var(--sbsys-size-#{$size-type}-#{$size-key});
			}
		}

		@each $size-key, $size-value in $sizes {
			&-y--#{$size-type}-#{$size-key} {
				border-top-width: var(--sbsys-size-#{$size-type}-#{$size-key});
				border-bottom-width: var(--sbsys-size-#{$size-type}-#{$size-key});
			}
		}

		@each $size-key, $size-value in $sizes {
			&-top--#{$size-type}-#{$size-key} {
				border-top-width: var(--sbsys-size-#{$size-type}-#{$size-key});
			}
		}

		@each $size-key, $size-value in $sizes {
			&-bottom--#{$size-type}-#{$size-key} {
				border-bottom-width: var(--sbsys-size-#{$size-type}-#{$size-key});
			}
		}

		@each $size-key, $size-value in $sizes {
			&-x--#{$size-type}-#{$size-key} {
				border-left-width: var(--sbsys-size-#{$size-type}-#{$size-key});
				border-right-width: var(--sbsys-size-#{$size-type}-#{$size-key});
			}
		}

		@each $size-key, $size-value in $sizes {
			&-left--#{$size-type}-#{$size-key} {
				border-left-width: var(--sbsys-size-#{$size-type}-#{$size-key});
			}
		}

		@each $size-key, $size-value in $sizes {
			&-right--#{$size-type}-#{$size-key} {
				border-right-width: var(--sbsys-size-#{$size-type}-#{$size-key});
			}
		}
	}

	&-rounded {
		@each $size-key, $size-value in $sizes {
			&--#{$size-type}-#{$size-key} {
				border-radius: var(--sbsys-size-#{$size-type}-#{$size-key});
			}
		}

		@each $size-key, $size-value in $sizes {
			&-top--#{$size-type}-#{$size-key} {
				border-top-left-radius: var(--sbsys-size-#{$size-type}-#{$size-key});
				border-top-right-radius: var(--sbsys-size-#{$size-type}-#{$size-key});
			}
		}

		@each $size-key, $size-value in $sizes {
			&-bottom--#{$size-type}-#{$size-key} {
				border-bottom-left-radius: var(--sbsys-size-#{$size-type}-#{$size-key});
				border-bottom-right-radius: var(--sbsys-size-#{$size-type}-#{$size-key});
			}
		}

		@each $size-key, $size-value in $sizes {
			&-left--#{$size-type}-#{$size-key} {
				border-top-left-radius: var(--sbsys-size-#{$size-type}-#{$size-key});
				border-bottom-left-radius: var(--sbsys-size-#{$size-type}-#{$size-key});
			}
		}

		@each $size-key, $size-value in $sizes {
			&-right--#{$size-type}-#{$size-key} {
				border-top-right-radius: var(--sbsys-size-#{$size-type}-#{$size-key});
				border-bottom-right-radius: var(--sbsys-size-#{$size-type}-#{$size-key});
			}
		}

		@each $size-key, $size-value in $sizes {
			&-top-left--#{$size-type}-#{$size-key} {
				border-top-left-radius: var(--sbsys-size-#{$size-type}-#{$size-key});
			}
		}

		@each $size-key, $size-value in $sizes {
			&-top-right--#{$size-type}-#{$size-key} {
				border-top-right-radius: var(--sbsys-size-#{$size-type}-#{$size-key});
			}
		}

		@each $size-key, $size-value in $sizes {
			&-bottom-right--#{$size-type}-#{$size-key} {
				border-bottom-right-radius: var(--sbsys-size-#{$size-type}-#{$size-key});
			}
		}

		@each $size-key, $size-value in $sizes {
			&-bottom-left--#{$size-type}-#{$size-key} {
				border-bottom-left-radius: var(--sbsys-size-#{$size-type}-#{$size-key});
			}
		}
	}
}

@mixin lines {
	&-line {
		@each $size-key, $size-value in $sizes {
			&--#{$size-key} {
				line-height: var(--sbsys-size-line-#{$size-key});
			}
		}
	}
}
